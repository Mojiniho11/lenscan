generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event {
  id          Int      @id @default(autoincrement())
  blockNumber BigInt?
  txHash      String?  @db.VarChar(66)
  txIndex     Int?
  logIndex    Int?
  removed     Boolean?
  timestamp   BigInt?
  type        String?
  data        Json?

  @@unique([blockNumber, logIndex])
  @@index([type])
}

model LastBlock {
  id          Int  @id
  blockNumber Int?
}

model MomokaTx {
  id                 Int      @id @default(autoincrement())
  proofTxId          String   @unique
  success            Boolean?
  dataAvailabilityId String   @unique
  publicationId      String   @unique
  signature          String   @unique
  timestampProofs    Json?
  chainProofs        Json?
  timestamp          BigInt?
  type               String?
  event              Json?

  @@index([proofTxId])
  @@index([type])
}

// -- for lens profile
// CREATE MATERIALIZED VIEW publications_summary_by_date AS
// SELECT
//     DATE_TRUNC('day', to_timestamp("timestamp"))::date AS "mv_date",
//     "data"->>'ProfileId' AS "profileId",
//     COUNT(*) AS "mv_count",
//     CASE
//         WHEN COUNT(*) > 4 THEN 4
//         ELSE COUNT(*)
//     END AS "mv_level"
// FROM
//     "Event"
// WHERE
//     "type" IN ('PostCreated', 'CommentCreated', 'MirrorCreated')
// GROUP BY "mv_date", "profileId"
// ORDER BY "mv_date", "profileId";

// CREATE UNIQUE INDEX publications_summary_by_date_pk ON publications_summary_by_date (mv_date, "profileId");

// REFRESH MATERIALIZED VIEW publications_summary_by_date;

// CREATE OR REPLACE FUNCTION get_publications_summary(
//     profile_id bigint,
//     start_date timestamp without time zone,
//     end_date timestamp without time zone
// ) RETURNS TABLE (date date, count bigint, level bigint) LANGUAGE plpgsql IMMUTABLE AS $function$
// BEGIN
//     RETURN QUERY 
//     SELECT
//         "mv_date" AS date,
//         "mv_count" AS count,
//         "mv_level" AS level
//     FROM publications_summary_by_date WHERE "profileId"::bigint = profile_id AND "mv_date" >= start_date::date AND "mv_date" < end_date::date;
// END;
// $function$;
